library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library ieee_proposed;
use ieee_proposed.fixed_pkg.all;
use work.annGenericArrays_pkg.all;

entity tb_MNode is
end tb_MNode;

architecture Behavioral of tb_MNode is

component MNode is
port (
    clk     : in std_logic;
    m_in    : in hQArray;
    bias    : in sfixed(littleM downto littleN);
    m_out   : out std_logic
);
component MNode;

signal d_in : std_logic_vector(7 downto 0);
signal clk : std_logic;
signal en_in, en_reg : std_logic;
signal d_out : std_logic_vector(7 downto 0);
signal d_valid : std_logic;

constant clk_period : time := 10 ns;

begin

medianFilter : medianFilterDatapath
port map (
    d_in => d_in,
    clk => clk,
    en_in => en_in,
    en_reg => en_reg,
    d_out => d_out,
    d_valid => d_valid
);

-- Clock process definitions
process
begin
    clk <= '0';
    wait for clk_period/2;
    clk <= '1';
    wait for clk_period/2;
end process;


process
begin
    -- pipe in testing data
    for i in 1 to 5 loop
        d_in <= std_logic_vector(to_unsigned(i, 8));
        en_in <= '1';
        en_reg <= '0';
        wait for clk_period;
        
        d_in <= std_logic_vector(to_unsigned(i + 5, 8));
        wait for clk_period;
        
        d_in <= std_logic_vector(to_unsigned(i + 10, 8));
        en_in <= '0';
        en_reg <= '1';
        wait for clk_period;
    end loop;
    
    -- pipe in filler data to force testing data out
    for i in 1 to 4 loop
        d_in <= X"00";
        en_in <= '1';
        en_reg <= '0';
        wait for clk_period;
        
        d_in <= X"00";
        wait for clk_period;
        
        d_in <= X"00";
        en_in <= '0';
        en_reg <= '1';
        wait for clk_period;
    end loop;
    
    assert false
        report "End of simulation"
        severity failure;
end process;

end Behavioral;
